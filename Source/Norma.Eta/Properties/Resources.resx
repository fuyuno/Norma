<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="BlankInformation" xml:space="preserve">
    <value>Cannot get program information.</value>
  </data>
  <data name="Browser" xml:space="preserve">
    <value>Browser</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Cast" xml:space="preserve">
    <value>Cast</value>
  </data>
  <data name="ColorTheme" xml:space="preserve">
    <value>Color theme :</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>COMMENT</value>
  </data>
  <data name="CtrlEnter" xml:space="preserve">
    <value>Ctrl + Enter</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteBrowserCaches" xml:space="preserve">
    <value>Delete browser caches.</value>
  </data>
  <data name="DeleteBrowserCookies" xml:space="preserve">
    <value>Delete browser cookies.</value>
  </data>
  <data name="DisableChangeChannelByMouseWheel" xml:space="preserve">
    <value>Disable change channel by mouse wheel.</value>
  </data>
  <data name="DisableContextMenu" xml:space="preserve">
    <value>Disable context menu.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EnterOnly" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="Everyday" xml:space="preserve">
    <value>Everyday</value>
  </data>
  <data name="FetchedComment0" xml:space="preserve">
    <value>Fetched program comment (0).</value>
  </data>
  <data name="FetchedComments" xml:space="preserve">
    <value>Fetched program comments.</value>
  </data>
  <data name="FetchedProgramInformation" xml:space="preserve">
    <value>Fetched program information.</value>
  </data>
  <data name="FetchingComments" xml:space="preserve">
    <value>Fetching program comments.</value>
  </data>
  <data name="FetchingProgramInformation" xml:space="preserve">
    <value>Fetching program information.</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="HiddenFooterControls" xml:space="preserve">
    <value>Hide footer controls.</value>
  </data>
  <data name="HiddenHeaderControls" xml:space="preserve">
    <value>Hide header controls.</value>
  </data>
  <data name="HiddenSideControls" xml:space="preserve">
    <value>Hide side controls.</value>
  </data>
  <data name="InputComment" xml:space="preserve">
    <value>Input comment</value>
  </data>
  <data name="InvalidRegex" xml:space="preserve">
    <value>Invalid regular expression.</value>
  </data>
  <data name="IsRegex" xml:space="preserve">
    <value>Regex?</value>
  </data>
  <data name="Keyword" xml:space="preserve">
    <value>Keyword</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>Licenses</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>loading...</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="MonToFri" xml:space="preserve">
    <value>Monday to Friday</value>
  </data>
  <data name="MonToSat" xml:space="preserve">
    <value>Monday to Saturday</value>
  </data>
  <data name="MuteKeywords" xml:space="preserve">
    <value>Mute keywords :</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NumberOfHoldingComments" xml:space="preserve">
    <value>Number of holding comments :</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="Option" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Others" xml:space="preserve">
    <value>Others</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>please wait until the end of process...</value>
  </data>
  <data name="PostKey" xml:space="preserve">
    <value>Post shortcut key :</value>
  </data>
  <data name="ProgramDetails" xml:space="preserve">
    <value>Program details</value>
  </data>
  <data name="ProgramSummary" xml:space="preserve">
    <value>Program summary</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="ReceptionIntervalOfComments" xml:space="preserve">
    <value>Reception interval of comments :</value>
  </data>
  <data name="ReloadBrowserOnBroadcastCommercials" xml:space="preserve">
    <value>Reload browser on broadcast commercials.</value>
  </data>
  <data name="ReloadingThumbnail" xml:space="preserve">
    <value>Reloading channel thumbnails.</value>
  </data>
  <data name="RsvByKeyword" xml:space="preserve">
    <value>by Keywords</value>
  </data>
  <data name="RsvByTime" xml:space="preserve">
    <value>by Time</value>
  </data>
  <data name="RsvSuccess" xml:space="preserve">
    <value>Reservation success.</value>
  </data>
  <data name="SamplingIntervalOfProgramState" xml:space="preserve">
    <value>Sampling interval of program state :</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="ShiftEnter" xml:space="preserve">
    <value>Shift + Enter</value>
  </data>
  <data name="Staff" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>TIME</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="UpdateInervalOfProgramInformation" xml:space="preserve">
    <value>Update interval of program information :</value>
  </data>
  <data name="UpdateInteralOfThumbnail" xml:space="preserve">
    <value>Update interval of thumbnail : </value>
  </data>
  <data name="ViewingDRsv" xml:space="preserve">
    <value>Viewing details reservation</value>
  </data>
  <data name="ViewingRsv" xml:space="preserve">
    <value>Viewing reservation</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ExpiredAt" xml:space="preserve">
    <value>Expired at</value>
  </data>
  <data name="RepeatInterval" xml:space="preserve">
    <value>Repeat interval</value>
  </data>
  <data name="StartAt" xml:space="preserve">
    <value>Start at</value>
  </data>
  <data name="InvalidDateTime" xml:space="preserve">
    <value>Invalid date.</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="KeywordCannotBeBlank" xml:space="preserve">
    <value>Keyword cannot be blank.</value>
  </data>
  <data name="InvalidDateTime2" xml:space="preserve">
    <value>Date must be greater than now.</value>
  </data>
  <data name="AbemaNews" xml:space="preserve">
    <value>Abema news/</value>
  </data>
  <data name="AbemaSpecial" xml:space="preserve">
    <value>Abema SPECIAL</value>
  </data>
  <data name="Anime24" xml:space="preserve">
    <value>Anime24</value>
  </data>
  <data name="ClubChannel" xml:space="preserve">
    <value>CLUB CHANNEL</value>
  </data>
  <data name="Documentary" xml:space="preserve">
    <value>Documentary</value>
  </data>
  <data name="DramaChannel" xml:space="preserve">
    <value>DRAMA CHANNEL</value>
  </data>
  <data name="EdgeSportHd" xml:space="preserve">
    <value>EDGE SPORT HD</value>
  </data>
  <data name="FamilyAnime" xml:space="preserve">
    <value>Family Anime</value>
  </data>
  <data name="Fishing" xml:space="preserve">
    <value>Fishing</value>
  </data>
  <data name="Mahjong" xml:space="preserve">
    <value>Mahjong</value>
  </data>
  <data name="MidnightAnime" xml:space="preserve">
    <value>Midnight Anime</value>
  </data>
  <data name="MtvHits" xml:space="preserve">
    <value>MTV HITS</value>
  </data>
  <data name="OldtimeAnime" xml:space="preserve">
    <value>Oldtime Anime</value>
  </data>
  <data name="OnegaiRanking" xml:space="preserve">
    <value>Onegai Ranking</value>
  </data>
  <data name="Pet" xml:space="preserve">
    <value>Pet</value>
  </data>
  <data name="RealityShow" xml:space="preserve">
    <value>REALITY SHOW</value>
  </data>
  <data name="SpaceShowerMusic" xml:space="preserve">
    <value>SPACE SHOWER MUSIC</value>
  </data>
  <data name="SpecialPlus" xml:space="preserve">
    <value>SPECIAL PLUS</value>
  </data>
  <data name="VarietyChannel" xml:space="preserve">
    <value>VARIETY CHANNEL</value>
  </data>
  <data name="Vice" xml:space="preserve">
    <value>VICE</value>
  </data>
  <data name="WorldSports" xml:space="preserve">
    <value>WORLD SPORTS</value>
  </data>
  <data name="YokonoriSports" xml:space="preserve">
    <value>YOKONORI Surf Snow Skate</value>
  </data>
  <data name="ProgramId" xml:space="preserve">
    <value>Program ID</value>
  </data>
  <data name="RsvConfirm" xml:space="preserve">
    <value>Reservation with the following contents.</value>
  </data>
  <data name="RsvUsingKwdOrTime" xml:space="preserve">
    <value>Reserve using keyword or time.</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="NoticeKeywordRsvBody" xml:space="preserve">
    <value>Shortly, program start that contains keyword of "{0}".</value>
  </data>
  <data name="NoticeKeywordRsvTitle" xml:space="preserve">
    <value>Reservation Keyword Notification</value>
  </data>
  <data name="NoticeSlotRsvBody" xml:space="preserve">
    <value>Shortly, reserved program "{0}" start.</value>
  </data>
  <data name="NoticeSlotRsvTitle" xml:space="preserve">
    <value>Reservation Program Notification</value>
  </data>
  <data name="NoticeTimeRsvBody" xml:space="preserve">
    <value>Shortly, your reserved time "{0}".</value>
  </data>
  <data name="NoticeTimeRsvTitle" xml:space="preserve">
    <value>Reservation Time Notification</value>
  </data>
  <data name="Ignore" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="MinutesBefore" xml:space="preserve">
    <value>minutes before.</value>
  </data>
  <data name="ToastNotification" xml:space="preserve">
    <value>Toast Notification :</value>
  </data>
  <data name="ApplicationHasBeenCrash" xml:space="preserve">
    <value>Application has been crashed.</value>
  </data>
  <data name="CrashReportPath" xml:space="preserve">
    <value>Crash report has written to {0}.</value>
  </data>
  <data name="PleaseSendCrashReportToMe" xml:space="preserve">
    <value>Please send crash report.</value>
  </data>
  <data name="SpecialPlus2" xml:space="preserve">
    <value>SPECIAL PLUS 2</value>
  </data>
  <data name="RsvList" xml:space="preserve">
    <value>Reservation list</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Are you sure you wanto to delete this item?</value>
  </data>
</root>